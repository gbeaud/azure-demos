//This version works whether you have enabled or not Network rule name logging (preview as of August 2022) on your Azure Firewall (https://docs.microsoft.com/en-us/azure/firewall/firewall-preview#network-rule-name-logging-preview). Enabling this feature adds new items to the "msg" field of the logs, including policy name, rule collection group, rule collection and rule name.

// Create table to receive raw logs from Event Hub
.create table ['rawFirewallLogs']  (['records']:dynamic, ['EventProcessedUtcTime']:datetime, ['PartitionId']:int, ['EventEnqueuedUtcTime']:datetime)

// Create mapping command
.create table ['rawFirewallLogs'] ingestion json mapping 'rawFirewallLogs_mapping' '[{"column":"records", "Properties":{"Path":"$[\'records\']"}},{"column":"EventProcessedUtcTime", "Properties":{"Path":"$[\'EventProcessedUtcTime\']"}},{"column":"PartitionId", "Properties":{"Path":"$[\'PartitionId\']"}},{"column":"EventEnqueuedUtcTime", "Properties":{"Path":"$[\'EventEnqueuedUtcTime\']"}}]'

// Create function that will be used in the update policy
.create-or-alter function
 with (docstring = 'Parses raw records into strongly-typed columns', folder = 'UpdatePolicyFunctions')
     ExtractMyLogs()
    {
rawFirewallLogs
| mv-expand records
// Parse the "msg" nested JSON item containing protocol, source/destination IP and port and action
// Match DNAT records
| parse records.properties.msg with Protocol_1 ' request from ' SourceHost_1 ':' SourcePort_1 'to ' DestinationHost_1 ':' DestinationPort_1 'was' Action_1 'to' DNATDestination
// Match logs if Network rule name logging was enabled on Firewall
| parse records.properties.msg with Protocol_2 ' request from ' SourceHost_2 ':' SourcePort_2 'to ' DestinationHost_2 ':' DestinationPort_2 '. Action: ' Action_2 '. Policy: ' Policy '. Rule Collection Group: ' RCG '. Rule Collection: ' RuleCollection '. Rule: ' Rule
// Match logs if Network rule name logging was not enabled on Firewall
| parse records.properties.msg with Protocol_3 ' request from ' SourceHost_3 ':' SourcePort_3 'to ' DestinationHost_3 ':' DestinationPort_3 '. Action:' Action_3 '. '
| extend
    Protocol = strcat(Protocol_1, Protocol_2, Protocol_3),
    SourceHost = strcat(SourceHost_1, SourceHost_2, SourceHost_3),
    SourcePort = strcat(SourcePort_1, SourcePort_2, SourcePort_3),
    DestinationHost = strcat(DestinationHost_1, DestinationHost_2, DestinationHost_3),
    DestinationPort = strcat(DestinationPort_1, DestinationPort_2, DestinationPort_3),
    Action = strcat(Action_1, Action_2, Action_3)
| project
    //Assign types to each item (string or int)
    todatetime(records.['time']),
    tostring(records.category),
    tostring(records.operationName),
    tostring(records.resourceId),
    tostring(Protocol),
    tostring(SourceHost),
    toint(SourcePort),
    tostring(DestinationHost),
    toint(DestinationPort),
    tostring(DNATDestination),
    tostring(Action),
    tostring(Policy),
    tostring(RCG),
    tostring(RuleCollection),
    tostring(Rule)
}

// Create target table command
.create table networkFirewallLogs (
    Timestamp:datetime,
    Category:string,
    OperationName:string,
    ResourceID:string,
    Protocol:string,
    SourceIP:string,
    SourcePort:int ,
    DestinationIP:string,
    DestinationPort:int,
    DNATDestination:string,
    Action:string,
    Policy:string,
    RuleCollectionGroup:string,
    RuleCollection:string,
    Rule:string
    )

// Adding update policy on the target table
.alter table networkFirewallLogs policy update
@'[{ "IsEnabled": true, "Source": "rawFirewallLogs", "Query": "ExtractMyLogs()", "IsTransactional": false, "PropagateIngestionProperties": false}]'