//This new version supports rule collection groups information in the "msg" field of the firewall logs

// Create table to receive raw logs from Event Hub
.create table ['rawFirewallLogs']  (['records']:dynamic, ['EventProcessedUtcTime']:datetime, ['PartitionId']:int, ['EventEnqueuedUtcTime']:datetime)

// Create mapping command
.create table ['rawFirewallLogs'] ingestion json mapping 'rawFirewallLogs_mapping' '[{"column":"records", "Properties":{"Path":"$[\'records\']"}},{"column":"EventProcessedUtcTime", "Properties":{"Path":"$[\'EventProcessedUtcTime\']"}},{"column":"PartitionId", "Properties":{"Path":"$[\'PartitionId\']"}},{"column":"EventEnqueuedUtcTime", "Properties":{"Path":"$[\'EventEnqueuedUtcTime\']"}}]'

// Create function that will be used in the update policy
.create-or-alter function
 with (docstring = 'Parses raw records into strongly-typed columns', folder = 'UpdatePolicyFunctions')
     ExtractMyLogs()
    {
rawFirewallLogs
| mv-expand records
// Parse the "msg" nested JSON item containing protocol, source/destination IP and port and action
| parse records.properties.msg with Protocol_s ' request from ' SourceHost_s ':' SourcePort_s 'to ' DestinationHost_s ':' DestinationPort_s 'was' Action_s 'to' DNATDestination
| parse records.properties.msg with Protocol_S ' request from ' SourceHost_S ':' SourcePort_S 'to ' DestinationHost_S ':' DestinationPort_S '. Action: ' Action_S '. Policy: ' Policy '. Rule Collection Group: ' RCG '. Rule Collection: ' RuleCollection '. Rule: ' Rule
| extend
    Protocol = strcat(Protocol_s, Protocol_S),
    SourceHost = strcat(SourceHost_s, SourceHost_S),
    SourcePort = strcat(SourcePort_s, SourcePort_S),
    DestinationHost = strcat(DestinationHost_s, DestinationHost_S),
    DestinationPort = strcat(DestinationPort_s, DestinationPort_S),
    Action = strcat(Action_s, Action_S)
| project
    //Assign types to each item (string or int)
    todatetime(records.['time']),
    tostring(records.category),
    tostring(records.operationName),
    tostring(records.resourceId),
    tostring(Protocol),
    tostring(SourceHost),
    toint(SourcePort),
    tostring(DestinationHost),
    toint(DestinationPort),
    tostring(DNATDestination),
    tostring(Action),
    tostring(Policy),
    tostring(RCG),
    tostring(RuleCollection),
    tostring(Rule)
}

// Create target table command
.create table networkFirewallLogs (
    Timestamp:datetime,
    Category:string,
    OperationName:string,
    ResourceID:string,
    Protocol:string,
    SourceIP:string,
    SourcePort:int ,
    DestinationIP:string,
    DestinationPort:int,
    DNATDestination:string,
    Action:string,
    Policy:string,
    RuleCollectionGroup:string,
    RuleCollection:string,
    Rule:string
    )

// Adding update policy on the target table
.alter table networkFirewallLogs policy update
@'[{ "IsEnabled": true, "Source": "rawFirewallLogs", "Query": "ExtractMyLogs()", "IsTransactional": false, "PropagateIngestionProperties": false}]'